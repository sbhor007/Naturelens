#version: "3.8"

services:
  db:
    image: mysql:latest
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: naturelens_db
    ports:
      - 3306:3306
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot" ]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - neturelens-network

  elasticsearch:
    image: elasticsearch:9.1.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=elastic_search
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - neturelens-network
    healthcheck:
      test: [ "CMD", "curl", "-k", "-u", "elastic:elastic_search", "https://localhost:9200" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - neturelens-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    build: "./nginx"
    image: nginx
    container_name: "nginx_cont"
    ports:
      - "80:80"
    restart: always
    depends_on:
      angular_app:
        condition: service_healthy
    networks:
      - neturelens-network


  django_app:
    build:
      context: ./Backend/
    container_name: django_cont
    ports:
      - "8000:8000"
    env_file:
      - "./Backend/.env"
    depends_on:
      db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - neturelens-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/api/health/" ]
      interval: 10s
      timeout: 5s
      retries: 5



  angular_app:
    build:
      context: ./Frontend
    container_name: angular_cont
    ports:
      - "4200:4200"
    depends_on:
      django_app:
        condition: service_healthy
    networks:
      - neturelens-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:4200" ]
      interval: 10s
      timeout: 5s
      retries: 5





networks:
  neturelens-network:
    driver: bridge
